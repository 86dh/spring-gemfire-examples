<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:p="http://www.springframework.org/schema/p"
	xmlns:util="http://www.springframework.org/schema/util"
	xmlns:gfe="http://www.springframework.org/schema/gemfire"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:cache="http://www.springframework.org/schema/cache"
	xmlns:c="http://www.springframework.org/schema/c"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/gemfire http://www.springframework.org/schema/gemfire/spring-gemfire-1.1.xsd
		http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util.xsd
		http://www.springframework.org/schema/cache http://www.springframework.org/schema/cache/spring-cache-3.1.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.1.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.1.xsd">
		

    <!-- Generic properties that we can set, such as where to store data and log files -->
    <context:property-placeholder system-properties-mode="OVERRIDE" location="classpath:/common.properties" />

    <!-- gemfire.properties file for the cache server -->
    <bean id="props" class="org.springframework.beans.factory.config.PropertiesFactoryBean">
        <property name="locations">
            <list>
                <value>classpath:gemfire-server.properties</value>
            </list>
        </property>
        <property name="properties">
            <value>locators=${locator.host1}[${locator.port1}],${locator.host2}[${locator.port2}]</value>
        </property>
    </bean>

    <!-- when we run multiple cache servers on the same node, we need unique server ports -->
    <bean id="portGenerator" class="com.gemstone.gemfire.util.ServerPortGenerator" />

    <!-- create a unique directory base directory for this node -->
    <bean id="findDiskDir" class="com.gemstone.gemfire.util.PersistenceDirectoryGenerator" destroy-method="unlock" init-method="findDirectory">
        <property name="parent" value="${data.location}" />
    </bean>

    <bean id="diskStore" class="com.gemstone.gemfire.util.GemfireDiskStore" init-method="init">
        <property name="cache" ref="cache" />
        <property name="baseDir" value="#{findDiskDir.getSelected()}" />
        <property name="diskStoreName" value="default" />
    </bean>

	<!-- GemFire cache bean -->
	<gfe:cache id="cache" properties-ref="props" cache-xml-location="classpath:cache-server.xml"/>
	
<!--	<util:properties id="props" location="cache.properties"/> -->

    <!-- this makes the cache server be a 'server' in the grid -->
    <gfe:cache-server id="advanced-config" auto-startup="true" cache-ref="cache" port="#{portGenerator.generatePort()}" />

	<!-- GemFire transaction manager
	<gfe:transaction-manager />
	-->	
	<!-- people region -->
	<gfe:replicated-region persistent="true" cache-ref="cache" id="people" >
		<gfe:cache-listener>
			<bean class="com.gemstone.gemfire.tutorial.storage.LoggingCacheListener"/>
		</gfe:cache-listener>
		<gfe:disk-store>
		<gfe:disk-dir location="#{findDiskDir.findDirectory()}"/>
		</gfe:disk-store>
	</gfe:replicated-region>

	<!-- posts region -->	
	<gfe:partitioned-region persistent="true"  cache-ref="cache" id="posts">
		<gfe:cache-listener>
			<bean class="com.gemstone.gemfire.tutorial.storage.LoggingCacheListener"/>
		</gfe:cache-listener>
		<gfe:disk-store>
		<gfe:disk-dir location="#{findDiskDir.findDirectory()}"/>
		</gfe:disk-store>
	</gfe:partitioned-region>
<!--		
	<bean id="gemfireTemplate"  class="org.springframework.data.gemfire.GemfireTemplate" p:region-ref="posts"/>
-->	
</beans>
