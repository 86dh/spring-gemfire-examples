description = 'Spring vFabric  GemFire - QuickStart'

apply plugin: 'base'
apply plugin: 'idea'
apply plugin: 'java'
apply plugin: 'eclipse'  // `gradle eclipse` to generate .classpath/.project

[compileJava, compileTestJava]*.options*.compilerArgs = ["-Xlint:-serial"]


repositories {
    mavenLocal()
    mavenCentral()
    // Public Spring artefacts
    mavenRepo name: "springsource-org-release", urls: "http://repository.springsource.com/maven/bundles/release"
    mavenRepo name: "spring-release", urls: "http://maven.springframework.org/release"
    mavenRepo name: "spring-milestone", urls: "http://maven.springframework.org/milestone"
    mavenRepo name: "spring-snapshot", urls: "http://maven.springframework.org/snapshot"
    mavenRepo name: "sonatype-snapshot", urls: "http://oss.sonatype.org/content/repositories/snapshots"
    mavenRepo name: "ext-snapshots", urls: "http://springframework.svn.sourceforge.net/svnroot/springframework/repos/repo-ext/"
    mavenRepo name: "gemfire-release-repo", urls: "http://dist.gemstone.com/maven/release" 
}

dependencies {
    compile "org.springframework.data:spring-data-gemfire:$version"
    compile "javax.inject:javax.inject:1"
    compile "javax.annotation:jsr250-api:1.0"
    compile group: "org.aspectj", name: "aspectjrt", version: "1.6.2"
    
    testCompile "junit:junit:$junitVersion"
    testCompile "org.springframework:spring-test:$springVersion"
}

sourceCompatibility = 1.5
targetCompatibility = 1.5 


task startPushProducer(type: JavaExec) {
       description = 'Runs the application'
       main = "quickstart.PushProducer"
       classpath = sourceSets.main.runtimeClasspath
       standardInput = System.in
       systemProperties['java.net.preferIPv4Stack'] = 'true'
}

task startPushConsumer(type: JavaExec) {
	description = 'Runs the application'
	main = "quickstart.PushConsumer"
	classpath = sourceSets.main.runtimeClasspath
	standardInput = System.in
	systemProperties['java.net.preferIPv4Stack'] = 'true'
}


task startLocator(type: JavaExec) {
	description = 'Starts the Gemfire Locator'
	main = "com.gemstone.gemfire.util.Locator"
	classpath = sourceSets.main.runtimeClasspath
	standardInput = System.in
	systemProperties['java.net.preferIPv4Stack'] = 'true'
}



task startDataNode(type: JavaExec) {
	description = 'Starts a Data Node with Random Port'
	main = "com.gemstone.gemfire.util.DataNode"
	classpath = sourceSets.main.runtimeClasspath
	standardInput = System.in
	systemProperties['java.net.preferIPv4Stack'] = 'true'
}

defaultTasks 'run'
